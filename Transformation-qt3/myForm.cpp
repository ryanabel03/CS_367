/****************************************************************************
** Form implementation generated from reading ui file 'myForm.ui'
**
** Created: Tue Jan 22 23:09:43 2013
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "myForm.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qscrollbar.h>
#include <qbuttongroup.h>
#include <qradiobutton.h>
#include <qheader.h>
#include <qlistview.h>
#include <qtabwidget.h>
#include <qwidget.h>
#include <qlabel.h>
#include <qspinbox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qaction.h>
#include <qmenubar.h>
#include <qpopupmenu.h>
#include <qtoolbar.h>
#include <qimage.h>
#include <qpixmap.h>

#include "GLPanel.h"
static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x74, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd5, 0xc1, 0x09, 0xc0,
    0x20, 0x0c, 0x05, 0xd0, 0x6f, 0xe9, 0x36, 0x81, 0x2c, 0x10, 0xb2, 0xff,
    0xdd, 0x85, 0xd2, 0x53, 0x85, 0xb6, 0xa9, 0x91, 0x48, 0x0f, 0x05, 0x3f,
    0x08, 0x1a, 0xf0, 0x29, 0x12, 0x10, 0xf8, 0x28, 0xc5, 0xa9, 0xd9, 0xc4,
    0xde, 0x96, 0xcd, 0x2b, 0x9a, 0xd9, 0xeb, 0x00, 0x00, 0x66, 0x0e, 0x2f,
    0xe0, 0xc2, 0x51, 0x98, 0x39, 0xc4, 0xf7, 0x0c, 0x4c, 0x44, 0x6d, 0x5e,
    0x6b, 0x35, 0x38, 0xcf, 0x92, 0x82, 0x45, 0xe4, 0xb2, 0xf6, 0xf0, 0x14,
    0xac, 0xaa, 0x8f, 0xda, 0x1d, 0x4f, 0xc1, 0xa5, 0x74, 0x1b, 0x22, 0x07,
    0x9f, 0x9d, 0x11, 0x1d, 0x96, 0xea, 0x8a, 0x91, 0x2c, 0x78, 0xc1, 0x0b,
    0xee, 0x64, 0xe6, 0x07, 0x19, 0xf5, 0x7e, 0x92, 0x03, 0xad, 0x45, 0x2a,
    0x04, 0xcc, 0x4e, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x99, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0x94, 0x41, 0x0e, 0x85,
    0x20, 0x0c, 0x44, 0x5f, 0x89, 0xc7, 0x36, 0x7f, 0x61, 0xbc, 0x77, 0x5d,
    0x28, 0x48, 0xa4, 0x28, 0x60, 0xff, 0xce, 0xd9, 0x54, 0x8b, 0xbe, 0x8e,
    0x13, 0x04, 0x3e, 0x1d, 0x92, 0x81, 0x77, 0xf4, 0x81, 0xa1, 0x23, 0xdc,
    0x2b, 0x34, 0xf6, 0xf4, 0x7a, 0x3d, 0xe2, 0xb8, 0x65, 0xa8, 0x84, 0x3f,
    0x40, 0x01, 0x98, 0x2a, 0x0b, 0x3d, 0x5f, 0x62, 0xc5, 0x83, 0x00, 0xaa,
    0x1a, 0xd7, 0x05, 0x50, 0x44, 0x9a, 0xb9, 0xd5, 0x07, 0xa7, 0x73, 0xa8,
    0xa4, 0xba, 0x4f, 0x92, 0xa2, 0xdf, 0x33, 0x3c, 0x64, 0xc6, 0x3b, 0xeb,
    0xbd, 0x82, 0xe5, 0xb8, 0xad, 0xde, 0xcb, 0xcc, 0x78, 0x20, 0xeb, 0x42,
    0x66, 0xc6, 0x39, 0x74, 0x5d, 0xfa, 0x80, 0xf3, 0x6f, 0xaf, 0x66, 0xc6,
    0x6f, 0xa1, 0x9c, 0x3f, 0x88, 0x2f, 0xb4, 0x70, 0xec, 0x05, 0xcd, 0xc0,
    0xbe, 0xd0, 0x78, 0x93, 0xf6, 0x8e, 0x17, 0x14, 0x92, 0x63, 0x5f, 0x68,
    0x6c, 0x3e, 0xef, 0xf6, 0xba, 0x3c, 0x8f, 0xdd, 0x36, 0x6d, 0xc4, 0xc0,
    0x45, 0x2c, 0x87, 0x81, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xa0, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xd5, 0x95, 0x4d, 0x0a, 0x80,
    0x20, 0x10, 0x85, 0x9f, 0xd1, 0x46, 0x68, 0xe1, 0x8d, 0xe6, 0x62, 0xd2,
    0x22, 0xbc, 0x98, 0x37, 0x6a, 0x21, 0xb4, 0xac, 0x45, 0x19, 0x92, 0xc6,
    0x64, 0x69, 0xe0, 0xb7, 0xf1, 0x87, 0xf1, 0xf1, 0x1c, 0x47, 0x05, 0x2a,
    0x21, 0x8e, 0x76, 0x2d, 0xad, 0xdb, 0xfb, 0x9e, 0x99, 0xf6, 0x56, 0x8f,
    0x80, 0xb5, 0x36, 0x4b, 0x85, 0x88, 0xce, 0x35, 0x44, 0x04, 0x00, 0xe8,
    0x0a, 0x39, 0x8c, 0xe8, 0xf9, 0x90, 0x34, 0xd2, 0x29, 0x2c, 0xc3, 0x7c,
    0x8e, 0xbd, 0x53, 0x0f, 0xeb, 0x58, 0x3a, 0x05, 0xe9, 0x54, 0x34, 0x1f,
    0x8a, 0x02, 0x7b, 0x2a, 0x7d, 0x3a, 0x1f, 0x09, 0xbf, 0x85, 0x4d, 0xc5,
    0xd5, 0xd9, 0x53, 0xaa, 0x39, 0x6e, 0x4f, 0x38, 0xca, 0xb1, 0x99, 0xe2,
    0xd2, 0xe1, 0x08, 0xab, 0xe1, 0x56, 0xf8, 0x2e, 0x30, 0x97, 0x7f, 0xcb,
    0x4d, 0x8f, 0xf9, 0x42, 0xd7, 0x5d, 0xbe, 0xbe, 0xd2, 0xe1, 0x43, 0x95,
    0x3a, 0x93, 0xf6, 0xca, 0xad, 0x3d, 0x61, 0x11, 0xf4, 0x4b, 0x7d, 0x4f,
    0x82, 0x0f, 0xf9, 0xc0, 0x06, 0x9b, 0xb5, 0x1e, 0xcd, 0xed, 0x31, 0x8c,
    0x5c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
    0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0x9c, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0x8d, 0x95, 0xad, 0x76, 0xdb,
    0x40, 0x10, 0x85, 0x3f, 0xf7, 0x18, 0xcc, 0x32, 0x89, 0xd9, 0x50, 0xd0,
    0x61, 0x36, 0x34, 0x4c, 0x98, 0xc3, 0x62, 0x96, 0x40, 0x87, 0x25, 0x6f,
    0x50, 0x3f, 0x42, 0x61, 0x61, 0x02, 0x1b, 0xe6, 0xb2, 0x84, 0x25, 0x50,
    0x61, 0x2e, 0x8b, 0xe1, 0x42, 0x99, 0x49, 0x6c, 0x86, 0x6d, 0xc1, 0x4a,
    0xb2, 0xfc, 0x77, 0xda, 0x21, 0x92, 0x66, 0x57, 0x77, 0xee, 0xdc, 0x3b,
    0x5a, 0xf5, 0x38, 0x13, 0xaf, 0xaf, 0xaf, 0x41, 0x44, 0x48, 0xd3, 0x74,
    0x2f, 0x6f, 0x66, 0x00, 0xa8, 0x2a, 0x00, 0x55, 0x55, 0x91, 0x24, 0x09,
    0x57, 0x57, 0x57, 0xbd, 0xee, 0xbe, 0xfe, 0x39, 0x60, 0x11, 0x61, 0x32,
    0x99, 0xb4, 0x40, 0x87, 0x6b, 0x4d, 0x94, 0x65, 0x89, 0xf7, 0xfe, 0x68,
    0xcf, 0x59, 0x60, 0x80, 0xcd, 0x66, 0x73, 0x04, 0x76, 0x58, 0x48, 0x55,
    0x71, 0xce, 0xfd, 0x3f, 0xf0, 0x29, 0x00, 0x33, 0x3b, 0x2a, 0x70, 0xaa,
    0x23, 0x80, 0x6f, 0xa7, 0x92, 0x79, 0x9e, 0x07, 0x33, 0x6b, 0x99, 0x38,
    0xe7, 0x70, 0xce, 0xed, 0xe9, 0xdd, 0xe8, 0x2f, 0x22, 0x47, 0xfa, 0x9e,
    0x65, 0xac, 0xaa, 0x24, 0x49, 0x42, 0x59, 0x96, 0x88, 0x48, 0x6b, 0x54,
    0x37, 0x4e, 0xb5, 0xff, 0x4f, 0xc6, 0x10, 0x5b, 0x3c, 0x9c, 0x88, 0x2e,
    0x68, 0x53, 0xec, 0x9c, 0x14, 0x27, 0x19, 0x37, 0x6c, 0x4e, 0x31, 0xed,
    0xe6, 0x55, 0x75, 0x6f, 0x42, 0xba, 0x71, 0xa4, 0x0d, 0xc0, 0x6a, 0xb5,
    0x0a, 0x59, 0x96, 0x31, 0x1c, 0x0e, 0xcf, 0x82, 0x37, 0x46, 0x7e, 0x7e,
    0x7e, 0x02, 0x20, 0x92, 0x30, 0x9f, 0x5f, 0xb7, 0x78, 0x7b, 0x8c, 0xdf,
    0xdf, 0xdf, 0x83, 0xf7, 0x9e, 0xfc, 0x23, 0x47, 0x66, 0x82, 0x88, 0xb4,
    0x00, 0x87, 0xd7, 0x86, 0x69, 0x59, 0x94, 0xe4, 0x79, 0xce, 0xb6, 0xda,
    0xf2, 0xf0, 0xf0, 0x10, 0x66, 0xb3, 0x19, 0xd7, 0xd7, 0xd7, 0xbd, 0x5e,
    0x17, 0x74, 0xb3, 0xf1, 0x54, 0xc5, 0x16, 0x35, 0x80, 0xd3, 0x4c, 0x01,
    0x9c, 0xa4, 0x08, 0x02, 0x0e, 0x7c, 0xe1, 0x59, 0xaf, 0xff, 0xb0, 0xdd,
    0x16, 0xa8, 0x1a, 0x17, 0x17, 0x19, 0x8b, 0xc5, 0x22, 0x4a, 0xd1, 0x30,
    0xbd, 0x9c, 0x5e, 0xe2, 0xd2, 0x14, 0x55, 0x03, 0x53, 0x8e, 0x6c, 0x31,
    0x03, 0x84, 0x9c, 0x4f, 0x3e, 0x78, 0x65, 0x6a, 0x53, 0xd2, 0xaf, 0x94,
    0xe7, 0x97, 0x67, 0xfc, 0x57, 0xfc, 0xfa, 0xd4, 0x94, 0x6c, 0x74, 0x11,
    0x41, 0x9f, 0x9e, 0x7e, 0x85, 0xb2, 0x28, 0xc3, 0xff, 0xc4, 0x57, 0xf8,
    0x0a, 0xa3, 0x30, 0x0a, 0x12, 0x24, 0x8c, 0xc2, 0x28, 0xac, 0xd7, 0xeb,
    0xf0, 0xe3, 0xfb, 0xcf, 0x30, 0x1e, 0x8f, 0xc3, 0x60, 0x90, 0x85, 0x24,
    0x49, 0x42, 0x36, 0xc8, 0x42, 0xbf, 0xda, 0x56, 0xdc, 0xdd, 0xdd, 0x9c,
    0x75, 0xf7, 0x30, 0x52, 0x52, 0x2e, 0x99, 0x92, 0x23, 0xcc, 0x98, 0x31,
    0x1e, 0x8f, 0x49, 0x64, 0x48, 0x69, 0x05, 0xcf, 0xbf, 0x5e, 0xa8, 0xaa,
    0x8a, 0x74, 0x90, 0xd2, 0x37, 0xc0, 0xfb, 0x22, 0xce, 0xa3, 0x19, 0x88,
    0x10, 0x6b, 0x48, 0xed, 0x36, 0x38, 0x5c, 0x54, 0xdc, 0x14, 0xc4, 0xf1,
    0x60, 0xdf, 0xb9, 0xc1, 0x33, 0xb4, 0x21, 0x7f, 0xd8, 0x80, 0x19, 0xe9,
    0x70, 0x18, 0xd7, 0x6b, 0x77, 0xfa, 0x65, 0x51, 0xe0, 0x45, 0xa2, 0x9e,
    0x66, 0xb4, 0xbe, 0x39, 0x88, 0x2e, 0xd6, 0x9d, 0x38, 0x03, 0x15, 0x20,
    0xe6, 0x04, 0xf0, 0xb6, 0xc5, 0x88, 0x67, 0x88, 0xdf, 0x6c, 0x5a, 0x4f,
    0x1c, 0xf5, 0xb8, 0x35, 0x09, 0x6b, 0x00, 0xb1, 0x76, 0x28, 0x14, 0x8b,
    0x35, 0x74, 0x6f, 0x67, 0x3b, 0x39, 0xd2, 0x78, 0xda, 0x09, 0x45, 0xe9,
    0x23, 0x60, 0x65, 0xe7, 0x05, 0xad, 0xc9, 0x76, 0x37, 0x1a, 0x20, 0x0a,
    0x76, 0xb8, 0xe2, 0x30, 0x2b, 0xa9, 0xfb, 0x6c, 0x7a, 0x63, 0x32, 0x99,
    0xf2, 0x0d, 0xeb, 0xb0, 0x6c, 0xc9, 0x6a, 0x7c, 0xb4, 0xfa, 0xba, 0x07,
    0xea, 0x9a, 0x6d, 0x35, 0x68, 0x0d, 0x58, 0xcb, 0x39, 0x18, 0x0c, 0x58,
    0x2c, 0xee, 0x22, 0x63, 0xef, 0x7d, 0x63, 0x15, 0x88, 0x41, 0x25, 0x40,
    0x15, 0x9d, 0x33, 0x8b, 0x30, 0xd2, 0xb0, 0xb2, 0x1d, 0x18, 0x3b, 0xcd,
    0x31, 0x43, 0x04, 0x96, 0xcb, 0x25, 0xf3, 0xf9, 0xbc, 0xd7, 0xcf, 0xb2,
    0x8c, 0x8f, 0xb7, 0x0f, 0x7e, 0xbf, 0xbd, 0xa1, 0x6a, 0xc4, 0xf3, 0x47,
    0xd8, 0x1b, 0x3e, 0xe9, 0x3c, 0xcb, 0x0e, 0xb2, 0xed, 0xb3, 0x9e, 0xa6,
    0xe5, 0x72, 0xc9, 0xe3, 0xe3, 0x63, 0x0f, 0x3a, 0x87, 0xd0, 0x6a, 0xb5,
    0x0a, 0xab, 0xd5, 0x1b, 0xdb, 0xfa, 0xff, 0xa5, 0x68, 0x6d, 0xca, 0xce,
    0x99, 0xdd, 0x5f, 0x03, 0x54, 0xcb, 0x78, 0x5f, 0x19, 0x93, 0xe9, 0x84,
    0xdb, 0xdb, 0x5b, 0xee, 0xef, 0xef, 0x5b, 0xbc, 0xbf, 0xd1, 0xf6, 0x9e,
    0x0c, 0x3f, 0xec, 0x24, 0x86, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a MyForm as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 */
MyForm::MyForm( QWidget* parent, const char* name, WFlags fl )
    : QMainWindow( parent, name, fl )
{
    (void)statusBar();
    QImage img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    if ( !name )
	setName( "MyForm" );
    setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 1, 1, sizePolicy().hasHeightForWidth() ) );
    setCentralWidget( new QWidget( this, "qt_central_widget" ) );

    QWidget* privateLayoutWidget = new QWidget( centralWidget(), "layout13" );
    privateLayoutWidget->setGeometry( QRect( 9, 5, 853, 453 ) );
    layout13 = new QHBoxLayout( privateLayoutWidget, 2, 2, "layout13"); 

    layout12 = new QGridLayout( 0, 1, 1, 0, 6, "layout12"); 

    vScroll = new QScrollBar( privateLayoutWidget, "vScroll" );
    vScroll->setMinValue( -40 );
    vScroll->setMaxValue( 40 );
    vScroll->setOrientation( QScrollBar::Vertical );

    layout12->addWidget( vScroll, 0, 1 );

    glarea = new GLPanel( privateLayoutWidget, "glarea" );
    glarea->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 0, 0, glarea->sizePolicy().hasHeightForWidth() ) );
    glarea->setMinimumSize( QSize( 560, 420 ) );

    layout12->addWidget( glarea, 0, 0 );

    hScroll = new QScrollBar( privateLayoutWidget, "hScroll" );
    hScroll->setMinValue( -40 );
    hScroll->setMaxValue( 40 );
    hScroll->setOrientation( QScrollBar::Horizontal );

    layout12->addWidget( hScroll, 1, 0 );
    layout13->addLayout( layout12 );

    layout11 = new QGridLayout( 0, 1, 1, 0, 6, "layout11"); 

    stepMode = new QButtonGroup( privateLayoutWidget, "stepMode" );
    stepMode->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)1, 1, 1, stepMode->sizePolicy().hasHeightForWidth() ) );
    stepMode->setLineWidth( 1 );
    stepMode->setAlignment( int( QButtonGroup::AlignHCenter ) );
    stepMode->setExclusive( TRUE );

    localCF = new QRadioButton( stepMode, "localCF" );
    localCF->setGeometry( QRect( 11, 26, 107, 20 ) );
    QFont localCF_font(  localCF->font() );
    localCF->setFont( localCF_font ); 
    localCF->setChecked( TRUE );
    stepMode->insert( localCF, 1 );

    globalCF = new QRadioButton( stepMode, "globalCF" );
    globalCF->setGeometry( QRect( 125, 26, 124, 20 ) );
    stepMode->insert( globalCF, 2 );

    layout11->addWidget( stepMode, 3, 0 );

    layout34 = new QHBoxLayout( 0, 5, 5, "layout34"); 

    add_transf = new QPushButton( privateLayoutWidget, "add_transf" );
    add_transf->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, add_transf->sizePolicy().hasHeightForWidth() ) );
    layout34->addWidget( add_transf );

    del_transf = new QPushButton( privateLayoutWidget, "del_transf" );
    del_transf->setEnabled( FALSE );
    del_transf->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, del_transf->sizePolicy().hasHeightForWidth() ) );
    layout34->addWidget( del_transf );

    layout11->addLayout( layout34, 1, 0 );

    layout10 = new QHBoxLayout( 0, 2, 2, "layout10"); 

    trsfList = new QListView( privateLayoutWidget, "trsfList" );
    trsfList->addColumn( tr( "Command" ) );
    trsfList->header()->setClickEnabled( FALSE, trsfList->header()->count() - 1 );
    trsfList->addColumn( tr( "Arguments" ) );
    trsfList->setItemMargin( 4 );
    layout10->addWidget( trsfList );

    layout9 = new QVBoxLayout( 0, 3, 2, "layout9"); 

    upList = new QPushButton( privateLayoutWidget, "upList" );
    upList->setEnabled( FALSE );
    upList->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, upList->sizePolicy().hasHeightForWidth() ) );
    layout9->addWidget( upList );

    downList = new QPushButton( privateLayoutWidget, "downList" );
    downList->setEnabled( FALSE );
    layout9->addWidget( downList );

    run = new QPushButton( privateLayoutWidget, "run" );
    layout9->addWidget( run );

    step = new QPushButton( privateLayoutWidget, "step" );
    layout9->addWidget( step );

    reset = new QPushButton( privateLayoutWidget, "reset" );
    layout9->addWidget( reset );
    layout10->addLayout( layout9 );

    layout11->addLayout( layout10, 2, 0 );

    trans_tab = new QTabWidget( privateLayoutWidget, "trans_tab" );
    trans_tab->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, trans_tab->sizePolicy().hasHeightForWidth() ) );
    trans_tab->setMinimumSize( QSize( 0, 150 ) );

    tab = new QWidget( trans_tab, "tab" );

    QWidget* privateLayoutWidget_2 = new QWidget( tab, "layout2" );
    privateLayoutWidget_2->setGeometry( QRect( 0, 10, 230, 97 ) );
    layout2 = new QGridLayout( privateLayoutWidget_2, 1, 1, 7, 4, "layout2"); 

    textLabel3 = new QLabel( privateLayoutWidget_2, "textLabel3" );

    layout2->addWidget( textLabel3, 2, 0 );

    y_trans = new QSpinBox( privateLayoutWidget_2, "y_trans" );
    y_trans->setMaxValue( 99 );
    y_trans->setMinValue( -99 );

    layout2->addWidget( y_trans, 1, 1 );

    textLabel2 = new QLabel( privateLayoutWidget_2, "textLabel2" );

    layout2->addWidget( textLabel2, 1, 0 );

    x_trans = new QSpinBox( privateLayoutWidget_2, "x_trans" );
    x_trans->setMaxValue( 99 );
    x_trans->setMinValue( -99 );

    layout2->addWidget( x_trans, 0, 1 );

    textLabel1 = new QLabel( privateLayoutWidget_2, "textLabel1" );
    textLabel1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)7, 0, 5, textLabel1->sizePolicy().hasHeightForWidth() ) );

    layout2->addWidget( textLabel1, 0, 0 );

    z_trans = new QSpinBox( privateLayoutWidget_2, "z_trans" );
    z_trans->setMinValue( -99 );

    layout2->addWidget( z_trans, 2, 1 );
    trans_tab->insertTab( tab, QString::fromLatin1("") );

    tab_2 = new QWidget( trans_tab, "tab_2" );

    QWidget* privateLayoutWidget_3 = new QWidget( tab_2, "layout2_2" );
    privateLayoutWidget_3->setGeometry( QRect( 0, 10, 230, 95 ) );
    layout2_2 = new QGridLayout( privateLayoutWidget_3, 1, 1, 7, 4, "layout2_2"); 

    textLabel3_2 = new QLabel( privateLayoutWidget_3, "textLabel3_2" );

    layout2_2->addWidget( textLabel3_2, 2, 0 );

    y_scale = new QSpinBox( privateLayoutWidget_3, "y_scale" );
    y_scale->setMinValue( -99 );
    y_scale->setValue( 1 );

    layout2_2->addWidget( y_scale, 1, 1 );

    textLabel2_2 = new QLabel( privateLayoutWidget_3, "textLabel2_2" );

    layout2_2->addWidget( textLabel2_2, 1, 0 );

    x_scale = new QSpinBox( privateLayoutWidget_3, "x_scale" );
    x_scale->setMinValue( -99 );
    x_scale->setValue( 1 );

    layout2_2->addWidget( x_scale, 0, 1 );

    textLabel1_2 = new QLabel( privateLayoutWidget_3, "textLabel1_2" );

    layout2_2->addWidget( textLabel1_2, 0, 0 );

    z_scale = new QSpinBox( privateLayoutWidget_3, "z_scale" );
    z_scale->setMinValue( -99 );
    z_scale->setValue( 1 );

    layout2_2->addWidget( z_scale, 2, 1 );
    trans_tab->insertTab( tab_2, QString::fromLatin1("") );

    TabPage = new QWidget( trans_tab, "TabPage" );

    QWidget* privateLayoutWidget_4 = new QWidget( TabPage, "layout7" );
    privateLayoutWidget_4->setGeometry( QRect( 14, 71, 220, 40 ) );
    layout7 = new QHBoxLayout( privateLayoutWidget_4, 3, 3, "layout7"); 

    textLabel1_3 = new QLabel( privateLayoutWidget_4, "textLabel1_3" );
    textLabel1_3->setMargin( 8 );
    textLabel1_3->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    layout7->addWidget( textLabel1_3 );

    rot_angle = new QSpinBox( privateLayoutWidget_4, "rot_angle" );
    rot_angle->setMaxValue( 180 );
    rot_angle->setMinValue( -180 );
    layout7->addWidget( rot_angle );

    buttonGroup1 = new QButtonGroup( TabPage, "buttonGroup1" );
    buttonGroup1->setEnabled( TRUE );
    buttonGroup1->setGeometry( QRect( 13, 4, 225, 60 ) );
    buttonGroup1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 0, 0, buttonGroup1->sizePolicy().hasHeightForWidth() ) );
    buttonGroup1->setMouseTracking( FALSE );
    buttonGroup1->setFocusPolicy( QButtonGroup::ClickFocus );
    buttonGroup1->setFrameShape( QButtonGroup::GroupBoxPanel );
    buttonGroup1->setFrameShadow( QButtonGroup::Sunken );
    buttonGroup1->setLineWidth( 1 );
    buttonGroup1->setMargin( 0 );
    buttonGroup1->setAlignment( int( QButtonGroup::AlignTop | QButtonGroup::AlignLeft ) );
    buttonGroup1->setExclusive( TRUE );
    buttonGroup1->setProperty( "selectedId", 1 );

    x_axis = new QRadioButton( buttonGroup1, "x_axis" );
    x_axis->setGeometry( QRect( 20, 25, 35, 20 ) );
    x_axis->setChecked( TRUE );
    buttonGroup1->insert( x_axis, 1 );

    z_axis = new QRadioButton( buttonGroup1, "z_axis" );
    z_axis->setGeometry( QRect( 180, 25, 34, 20 ) );
    buttonGroup1->insert( z_axis, 3 );

    y_axis = new QRadioButton( buttonGroup1, "y_axis" );
    y_axis->setGeometry( QRect( 100, 25, 35, 20 ) );
    buttonGroup1->insert( y_axis, 2 );
    trans_tab->insertTab( TabPage, QString::fromLatin1("") );

    layout11->addWidget( trans_tab, 0, 0 );
    layout13->addLayout( layout11 );

    // actions
    fileNewAction = new QAction( this, "fileNewAction" );
    fileNewAction->setIconSet( QIconSet( image1 ) );
    fileOpenAction = new QAction( this, "fileOpenAction" );
    fileOpenAction->setIconSet( QIconSet( image2 ) );
    fileSaveAction = new QAction( this, "fileSaveAction" );
    fileSaveAction->setIconSet( QIconSet( image3 ) );
    fileSaveAsAction = new QAction( this, "fileSaveAsAction" );
    filePrintAction = new QAction( this, "filePrintAction" );
    filePrintAction->setIconSet( QIconSet( image4 ) );
    fileExitAction = new QAction( this, "fileExitAction" );


    // toolbars


    // menubar
    MenuBar = new QMenuBar( this, "MenuBar" );


    fileMenu = new QPopupMenu( this );
    fileNewAction->addTo( fileMenu );
    fileOpenAction->addTo( fileMenu );
    fileSaveAction->addTo( fileMenu );
    fileSaveAsAction->addTo( fileMenu );
    fileMenu->insertSeparator();
    filePrintAction->addTo( fileMenu );
    fileMenu->insertSeparator();
    fileExitAction->addTo( fileMenu );
    MenuBar->insertItem( QString(""), fileMenu, 1 );

    languageChange();
    resize( QSize(864, 533).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( fileExitAction, SIGNAL( activated() ), this, SLOT( close() ) );
    connect( step, SIGNAL( clicked() ), this, SLOT( step_clicked() ) );
    connect( add_transf, SIGNAL( clicked() ), this, SLOT( add_transf_clicked() ) );
    connect( del_transf, SIGNAL( clicked() ), this, SLOT( del_transf_clicked() ) );
    connect( trsfList, SIGNAL( currentChanged(QListViewItem*) ), this, SLOT( trsfList_currentChanged(QListViewItem*) ) );
    connect( trsfList, SIGNAL( clicked(QListViewItem*) ), this, SLOT( trsfList_clicked(QListViewItem*) ) );
    connect( upList, SIGNAL( clicked() ), this, SLOT( upList_clicked() ) );
    connect( downList, SIGNAL( clicked() ), this, SLOT( downList_clicked() ) );
    connect( run, SIGNAL( clicked() ), this, SLOT( run_clicked() ) );
    connect( reset, SIGNAL( clicked() ), this, SLOT( reset_clicked() ) );
}

/*
 *  Destroys the object and frees any allocated resources
 */
MyForm::~MyForm()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void MyForm::languageChange()
{
    setCaption( tr( "OpenGL Composite Transformation" ) );
    stepMode->setTitle( tr( "Select one then click Transform/Step" ) );
    localCF->setText( tr( "&Local/Forward" ) );
    localCF->setAccel( QKeySequence( tr( "Alt+L" ) ) );
    globalCF->setText( tr( "&Global/Backward" ) );
    globalCF->setAccel( QKeySequence( tr( "Alt+G" ) ) );
    add_transf->setText( tr( "Appen&d" ) );
    add_transf->setAccel( QKeySequence( tr( "Alt+D" ) ) );
    del_transf->setText( tr( "&Remove" ) );
    del_transf->setAccel( QKeySequence( tr( "Alt+R" ) ) );
    trsfList->header()->setLabel( 0, tr( "Command" ) );
    trsfList->header()->setLabel( 1, tr( "Arguments" ) );
    upList->setText( tr( "&Up" ) );
    upList->setAccel( QKeySequence( tr( "Alt+U" ) ) );
    downList->setText( tr( "D&own" ) );
    downList->setAccel( QKeySequence( tr( "Alt+O" ) ) );
    run->setText( tr( "&Transform" ) );
    run->setAccel( QKeySequence( tr( "Alt+T" ) ) );
    step->setText( tr( "Ste&p" ) );
    step->setAccel( QKeySequence( tr( "Alt+P" ) ) );
    reset->setText( tr( "Re&set" ) );
    reset->setAccel( QKeySequence( tr( "Alt+S" ) ) );
    textLabel3->setText( tr( "Z displacement" ) );
    textLabel2->setText( tr( "Y displacement" ) );
    textLabel1->setText( tr( "X displacement" ) );
    trans_tab->changeTab( tab, tr( "Tr&anslate" ) );
    textLabel3_2->setText( tr( "Z scale" ) );
    textLabel2_2->setText( tr( "Y scale" ) );
    textLabel1_2->setText( tr( "X scale" ) );
    trans_tab->changeTab( tab_2, tr( "S&cale" ) );
    textLabel1_3->setText( tr( "Angle" ) );
    buttonGroup1->setTitle( tr( "Axis of Rotation" ) );
    x_axis->setText( tr( "&X" ) );
    x_axis->setAccel( QKeySequence( tr( "Alt+X" ) ) );
    z_axis->setText( tr( "&Z" ) );
    z_axis->setAccel( QKeySequence( tr( "Alt+Z" ) ) );
    y_axis->setText( tr( "&Y" ) );
    y_axis->setAccel( QKeySequence( tr( "Alt+Y" ) ) );
    trans_tab->changeTab( TabPage, tr( "&Rotate" ) );
    fileNewAction->setText( tr( "New" ) );
    fileNewAction->setMenuText( tr( "&New" ) );
    fileNewAction->setAccel( tr( "Ctrl+N" ) );
    fileOpenAction->setText( tr( "Open" ) );
    fileOpenAction->setMenuText( tr( "&Open..." ) );
    fileOpenAction->setAccel( tr( "Ctrl+O" ) );
    fileSaveAction->setText( tr( "Save" ) );
    fileSaveAction->setMenuText( tr( "&Save" ) );
    fileSaveAction->setAccel( tr( "Ctrl+S" ) );
    fileSaveAsAction->setText( tr( "Save As" ) );
    fileSaveAsAction->setMenuText( tr( "Save &As..." ) );
    fileSaveAsAction->setAccel( QString::null );
    filePrintAction->setText( tr( "Print" ) );
    filePrintAction->setMenuText( tr( "&Print..." ) );
    filePrintAction->setAccel( tr( "Ctrl+P" ) );
    fileExitAction->setText( tr( "Exit" ) );
    fileExitAction->setMenuText( tr( "E&xit" ) );
    fileExitAction->setAccel( QString::null );
    if (MenuBar->findItem(1))
        MenuBar->findItem(1)->setText( tr( "&File" ) );
}

void MyForm::addTransformation()
{
    qWarning( "MyForm::addTransformation(): Not implemented yet" );
}

void MyForm::removeTransformation()
{
    qWarning( "MyForm::removeTransformation(): Not implemented yet" );
}

void MyForm::upList_clicked()
{
    qWarning( "MyForm::upList_clicked(): Not implemented yet" );
}

void MyForm::downList_clicked()
{
    qWarning( "MyForm::downList_clicked(): Not implemented yet" );
}

void MyForm::trsfList_currentChanged(QListViewItem*)
{
    qWarning( "MyForm::trsfList_currentChanged(QListViewItem*): Not implemented yet" );
}

void MyForm::trsfList_selectionChanged(QListViewItem*)
{
    qWarning( "MyForm::trsfList_selectionChanged(QListViewItem*): Not implemented yet" );
}

void MyForm::trsfList_clicked(QListViewItem*)
{
    qWarning( "MyForm::trsfList_clicked(QListViewItem*): Not implemented yet" );
}

void MyForm::run_clicked()
{
    qWarning( "MyForm::run_clicked(): Not implemented yet" );
}

void MyForm::step_clicked()
{
    qWarning( "MyForm::step_clicked(): Not implemented yet" );
}

void MyForm::vScroll_valueChanged(int)
{
    qWarning( "MyForm::vScroll_valueChanged(int): Not implemented yet" );
}

void MyForm::hScroll_valueChanged(int)
{
    qWarning( "MyForm::hScroll_valueChanged(int): Not implemented yet" );
}

void MyForm::add_transf_clicked()
{
    qWarning( "MyForm::add_transf_clicked(): Not implemented yet" );
}

void MyForm::del_transf_clicked()
{
    qWarning( "MyForm::del_transf_clicked(): Not implemented yet" );
}

void MyForm::stepMode_clicked(int)
{
    qWarning( "MyForm::stepMode_clicked(int): Not implemented yet" );
}

void MyForm::reset_clicked()
{
    qWarning( "MyForm::reset_clicked(): Not implemented yet" );
}

